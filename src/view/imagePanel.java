/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;

/**
 *
 * @author adm
 */
public class imagePanel extends javax.swing.JPanel implements MouseListener{

    private BufferedImage image;
    private int fotoID;
    private NewItem parent;
    public imagePanel() {
        initComponents();
    }
    public imagePanel(BufferedImage image, int id, NewItem parent) {
        initComponents();
        this.fotoID = id;
        this.parent = parent;
        this.image = rescale(image);
        this.addMouseListener(this);
    }
    
    public BufferedImage rescale(BufferedImage originalImage)
    {
        double proportions = (double)originalImage.getWidth()/(double)originalImage.getHeight();
        BufferedImage resizedImage = new BufferedImage((int)(150*proportions), 150, BufferedImage.TYPE_INT_RGB);
        this.setSize((int)(150*proportions), 150);
        Graphics2D g = resizedImage.createGraphics();
        g.drawImage(originalImage, 0, 0, (int)(150*proportions), 150, null);
        g.dispose();
        return resizedImage;
    }
    
    @Override
    protected void paintComponent(Graphics g){
        try {
            super.paintComponent(g);
            g.drawImage(image, 0, 0, null);
            g.drawImage(ImageIO.read(new File("x.jpg")), this.getSize().width-20, 5, null);
        } catch (IOException ex) {
            Logger.getLogger(imagePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables


    @Override
    public void mouseClicked(MouseEvent e) {
        int width = this.getSize().width;
        if( e.getX()>width-20 && e.getX()<width){
            if(e.getY()>0 && e.getY()<20){
                parent.removePanel(fotoID);
            }
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
        
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        
    }

    @Override
    public void mouseExited(MouseEvent e) {
       
    }
}
